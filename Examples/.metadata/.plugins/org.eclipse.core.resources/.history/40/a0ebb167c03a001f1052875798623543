/*
 * cordinates.c
 *
 *  Created on: Jul 4, 2024
 *      Author: Shreyas Acharya, BHARATI SOFTWARE
 */

#include "cordinates.h"
#include "CST816S.h"
#include "GC9A01A.h"
#include "font.h"
#include <string.h>
#include <stdio.h>

// Function prototypes


#define COORDINATES_X_POS 40
#define COORDINATES_Y_POS 180
#define COORDINATES_WIDTH 100
#define COORDINATES_HEIGHT 30
#define KEY_TXT 0xFFFB
#define TOUCH_KEY 0x0B85

void printmsg(uint16_t x, uint16_t y, const char* msg) {
	gc9a01a_write_string(x, y, msg, Font_11x18, WHITE, NAVY);
}

void clear_area(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) {
  gc9a01a_rect_fill(x, x + width, y, y + height, color);
}

void tp_cordinates(void) {
	char msg[10];
	struct touch_data data;
	while(1) {
		if(CST816S_data_available()) {
			memcpy(&data, CST816S_get_data(), sizeof(struct touch_data));
			gc9a01a_rect_fill(30, 80, 160, 18, NAVY);
			gc9a01a_rect_fill(150, 80, 160, 18, NAVY);

			snprintf(msg, sizeof(msg), "X: %d", data.x);
			printmsg(30, 160, (const char*)msg);

			snprintf(msg, sizeof(msg), "Y: %d", data.y);
			printmsg(150, 160, (const char*)msg);

			HAL_Delay(300);
		}
	}
}

void read_sd(void) {
	struct touch_data data;
	while(1) {
		if(CST816S_data_available()) {
			memcpy(&data, CST816S_get_data(), sizeof(struct touch_data));
			if(data.x >= 100 && data.x <= 140 && data.y >= 60 && data.y <= 180) {
					background_fill(NAVY);
					display_text_file("write.txt");
			}
		}
	}
}

typedef enum {
	OPEN_TEXT,
	FOX,
	MOON,
	BIRD
} menu;

void touch_key(uint16_t y, const char* msg) {
    int len = strlen(msg) * 16;
    if(len > 160) return;
    int tx = (160 - len) / 2;
    gc9a01a_rect_fill(40, 160, y, 40, 0x73EC);
    gc9a01a_rect_fill(40 + 3, 154, y + 3, 34, TOUCH_KEY);

    gc9a01a_write_string(tx + 40, y + 7, msg, Font_16x26, KEY_TXT, TOUCH_KEY);
}

int click_pad() {
	struct touch_data data;
	if(CST816S_data_available()) {
		memcpy(&data, CST816S_get_data(), sizeof(struct touch_data));
		if(data.x >= 40 && data.x <= 140) {
			if(data.y >= 40 && data.y <= 60) {
					return OPEN_TEXT;
			} else if(data.y > 60 && data.y <= 100) {
					return FOX;
			} else if(data.y > 100 && data.y <= 140) {
					return MOON;
			} else if(data.y > 140 && data.y <= 200) {
					return BIRD;
			}
		}
	}
	return -1;
}

void render_lcd() {
    switch(click_pad()) {
        case OPEN_TEXT:
            display_text_file("write.txt");
            break;
        case FOX:
            display_image_file("fox.bmp");
            break;
        case MOON:
            display_image_file("moon.bmp");
            break;
        case BIRD:
            display_image_file("bird1.bmp");
            display_image_file("bird2.bmp");
            display_image_file("bird3.bmp");
            display_image_file("bird4.bmp");
            display_image_file("bird5.bmp");
            display_image_file("bird6.bmp");
            break;
        default:
            // Handle default case if necessary
            break;
    }
}

